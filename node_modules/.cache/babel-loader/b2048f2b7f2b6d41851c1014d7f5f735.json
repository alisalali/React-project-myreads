{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/Views/Search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\nimport Book from '../components/Book';\nexport var Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.getBook =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var query, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                query = event.target.value;\n\n                _this.setState({\n                  query: query\n                });\n\n                if (!query.trim()) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 6;\n                return BooksAPI.search(query);\n\n              case 6:\n                res = _context.sent;\n\n                if (res.error) {\n                  _this.setState({\n                    books: []\n                  });\n                } else {\n                  _this.setState({\n                    books: res\n                  });\n                }\n\n                _context.next = 12;\n                break;\n\n              case 10:\n                _this.setState({\n                  books: []\n                });\n\n                console.log('cle');\n\n              case 12:\n                _context.next = 16;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      query: '',\n      books: []\n    };\n    return _this;\n  }\n  /*     componentDidMount() {\n  \n          BooksAPI.getAll()\n              .then(\n                  (books) => {\n                      this.setState(() => ({\n                          books\n                      }))\n                  }\n              )\n  \n  \n      } */\n\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: this.getBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.books.length > 0 && this.state.books.map(function (book) {\n        var foundShelf = _this2.props.books.find(function (searchBooks) {\n          return searchBooks.id === book.id;\n        });\n\n        if (foundShelf) {\n          book.shelf = foundShelf.shelf;\n        } else {\n          book.shelf = \"none\";\n        }\n\n        return React.createElement(Book, Object.assign({\n          key: book.id\n        }, book, {\n          moveBook: _this2.props.moveBook,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n      }), this.props.books === 0 && React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"The book \")))));\n    }\n  }]);\n\n  return Search;\n}(Component);\nexport default Search;","map":{"version":3,"sources":["/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/Views/Search.js"],"names":["React","Component","Link","BooksAPI","Book","Search","props","getBook","event","query","target","value","setState","trim","search","res","error","books","console","log","state","length","map","book","foundShelf","find","searchBooks","id","shelf","moveBook"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI'\nimport Book from '../components/Book'\n\nexport class Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n            books: [],\n        }\n    }\n\n\n\n    /*     componentDidMount() {\n    \n            BooksAPI.getAll()\n                .then(\n                    (books) => {\n                        this.setState(() => ({\n                            books\n                        }))\n                    }\n                )\n    \n    \n        } */\n    getBook = async event => {\n        try {\n            const query = event.target.value;\n            this.setState({ query });\n            if (query.trim()) {\n\n                const res = await BooksAPI.search(query)\n\n                if (res.error) {\n                    this.setState({ books: [] })\n\n\n                } else {\n                    this.setState({ books: res })\n\n                }\n            }\n            else {\n                this.setState({ books: [] })\n                console.log('cle')\n            }\n        } catch (error) {\n            //console.log(error)\n\n        }\n\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"search-books\">\n                    <div className=\"search-books-bar\">\n                        <Link className=\"close-search\" to=\"/\">\n                            Close\n                            </Link>\n                        <div className=\"search-books-input-wrapper\">\n\n                            <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query} onChange={this.getBook} />\n\n                        </div>\n                    </div>\n                    <div className=\"search-books-results\">\n                        <ol className=\"books-grid\">\n\n                            {this.state.books.length > 0 &&\n                                this.state.books.map(book => {\n                                    const foundShelf = this.props.books.find(\n                                        searchBooks => searchBooks.id === book.id\n                                    )\n\n                                    if (foundShelf) {\n\n                                        book.shelf = foundShelf.shelf;\n                                    } else {\n                                        book.shelf = \"none\"\n\n                                    }\n                                    return (\n                                        <Book\n                                            key={book.id}\n                                            {...book}\n                                            moveBook={this.props.moveBook}\n                                        />)\n                                }\n                                )}\n                            {this.props.books === 0 && <h1>The book </h1>}\n\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}