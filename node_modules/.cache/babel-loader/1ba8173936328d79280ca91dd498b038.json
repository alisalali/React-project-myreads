{"ast":null,"code":"import _classCallCheck from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/Views/Search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\nimport Book from '../components/Book';\nexport var Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: this.getBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.books.length > 0 && this.state.books.map(function (book) {\n        return React.createElement(Book, Object.assign({\n          key: book.id\n        }, book, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n      })))));\n    }\n  }]);\n\n  return Search;\n}(Component);\nexport default Search;","map":{"version":3,"sources":["/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/Views/Search.js"],"names":["React","Component","Link","BooksAPI","Book","Search","props","getAll","then","books","setState","state","query","getBook","length","map","book","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,WAAaC,MAAb;AAAA;AAAA;AAAA;;AACI,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA;AAAG;;AAD1B;AAAA;AAAA,wCAUwB;AAAA;;AAEhBH,MAAAA,QAAQ,CAACI,MAAT,GACKC,IADL,CAEQ,UAACC,KAAD,EAAW;AACP,QAAA,MAAI,CAACC,QAAL,CAAc;AAAA,iBAAO;AACjBD,YAAAA,KAAK,EAALA;AADiB,WAAP;AAAA,SAAd;AAGH,OANT;AAUH;AAtBL;AAAA;AAAA,6BAkDa;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,2BAA/B;AAA2D,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,KAA7E;AAAoF,QAAA,QAAQ,EAAE,KAAKC,OAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAJJ,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKF,KAAL,CAAWF,KAAX,CAAiBK,MAAjB,GAA0B,CAA1B,IACG,KAAKH,KAAL,CAAWF,KAAX,CAAiBM,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACrB,oBAAC,IAAD;AACI,UAAA,GAAG,EAAEA,IAAI,CAACC;AADd,WAEQD,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADqB;AAAA,OAAzB,CAHR,CADJ,CAXJ,CADJ,CADJ;AA6BH;AAhFL;;AAAA;AAAA,EAA4Bf,SAA5B;AAmFA,eAAeI,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI'\nimport Book from '../components/Book'\n\nexport class Search extends Component {\n    constructor(props) { }\n    \n    state = {\n        query: '',\n        books: [],\n        //  newBooks: [],\n        //  searchErr: false\n    };\n\n    componentDidMount() {\n\n        BooksAPI.getAll()\n            .then(\n                (books) => {\n                    this.setState(() => ({\n                        books\n                    }))\n                }\n            )\n\n\n    }\n    getBook = async event => {\n        try {\n            const query = event.target.value;\n            this.setState({ query });\n            if (query.trim()) {\n\n                const res = await BooksAPI.search(query)\n\n                if (res.error) {\n                    this.setState({ books: [] })\n\n\n                } else {\n                    this.setState({ books: res })\n\n                }\n            }\n            else {\n                this.setState({ books: [] })\n                console.log('cle')\n            }\n        } catch (error) {\n            //console.log(error)\n\n        }\n\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"search-books\">\n                    <div className=\"search-books-bar\">\n                        <Link className=\"close-search\" to=\"/\">\n                            Close\n                            </Link>\n                        <div className=\"search-books-input-wrapper\">\n\n                            <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query} onChange={this.getBook} />\n\n                        </div>\n                    </div>\n                    <div className=\"search-books-results\">\n                        <ol className=\"books-grid\">\n\n                            {this.state.books.length > 0 &&\n                                this.state.books.map(book =>\n                                    <Book\n                                        key={book.id}\n                                        {...book}\n                                    />)\n                            }\n\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}