{"ast":null,"code":"import _classCallCheck from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/App.js\";\nimport React from 'react'; // import * as BooksAPI from './BooksAPI'\n\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Views/Home';\nimport Search from './Views/Search';\nimport * as BooksAPI from './BooksAPI';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false\n    };\n    _this.state = {\n      books: []\n    };\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(Home, {\n            onChangeShelf: _this3.changeShelf,\n            books: _this3.state.books,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: '/search',\n        component: Search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/App.js"],"names":["React","Switch","Route","Home","Search","BooksAPI","BooksApp","state","showSearchPage","books","getAll","then","setState","changeShelf","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;IACMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACN;;;;;;AAMAC,MAAAA,cAAc,EAAE;AAPV,K;UAURD,K,GAAQ;AACNE,MAAAA,KAAK,EAAE;AADD,K;;;;;;wCAIY;AAAA;;AAElBJ,MAAAA,QAAQ,CAACK,MAAT,GACGC,IADH,CAEI,UAACF,KAAD,EAAW;AACT,QAAA,MAAI,CAACG,QAAL,CAAc;AAAA,iBAAO;AACnBH,YAAAA,KAAK,EAALA;AADmB,WAAP;AAAA,SAAd;AAGD,OANL;AASD;;;6BACQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAC5B,oBAAC,IAAD;AACE,YAAA,aAAa,EAAE,MAAI,CAACI,WADtB;AAEE,YAAA,KAAK,EAAE,MAAI,CAACN,KAAL,CAAWE,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAE,SAAnB;AAA8B,QAAA,SAAS,EAAEL,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CADF;AAcD;;;;EA1CoBJ,KAAK,CAACc,S;;AA6C7B,eAAeR,QAAf","sourcesContent":["import React from 'react'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './Views/Home'\nimport Search from './Views/Search'\nimport * as BooksAPI from './BooksAPI'\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false\n\n  }\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n\n    BooksAPI.getAll()\n      .then(\n        (books) => {\n          this.setState(() => ({\n            books\n          }))\n        }\n      )\n\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <Home\n              onChangeShelf={this.changeShelf}\n              books={this.state.books}\n            />\n          )} />\n          <Route exact path={'/search'} component={Search} />\n        </Switch>\n\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}