{"ast":null,"code":"import _classCallCheck from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/Views/Home.js\";\nimport React, { Component } from 'react';\nimport Shelf from '../components/Shelf';\nimport * as BooksAPI from '../BooksAPI';\nimport { Link } from 'react-router-dom';\nexport var Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n\n    /*   state = {\n          books: []\n      };\n         componentDidMount() {\n             BooksAPI.getAll()\n              .then(\n                  (books) => {\n                      this.setState(() => ({\n                          books\n                      }))\n                  }\n              )\n     \n      }\n    */\n\n    /*   moveBook = (book, newShelf, allShelf) => {\n         //console.log(newShelf);\n                const newBooks = this.state.books.map(filterdBooks => {\n                     const foundID = allShelf[newShelf].find(\n                         bookID => bookID === filterdBooks.id\n                     )\n                     if (foundID) {\n                         filterdBooks.shelf = newShelf;\n                     }\n                     return filterdBooks\n                 }) \n         BooksAPI.getAll({ id: book.id }, newShelf)\n             .then(\n                 (books) => {\n                     this.setState(() => ({\n                         books\n                     }))\n                 }\n             )\n         console.log(book, newShelf, allShelf)\n         console.log(this.state)\n     }*/\n    value: function render() {\n      var currentlyReading = this.props.books.filter(function (books) {\n        return books.shelf === 'currentlyReading';\n      });\n      var wantToRead = this.props.books.filter(function (books) {\n        return books.shelf === 'wantToRead';\n      });\n      var read = this.props.books.filter(function (books) {\n        return books.shelf === 'read';\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Shelf, {\n        title: \"Currently Reading\",\n        book: currentlyReading,\n        moveBook: this.props.moveBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Shelf, {\n        title: \"Want to read\",\n        book: wantToRead,\n        moveBook: this.props.moveBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Shelf, {\n        title: \"Read\",\n        book: read,\n        moveBook: this.props.moveBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return Home;\n}(Component);\nexport default Home;","map":{"version":3,"sources":["/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/Views/Home.js"],"names":["React","Component","Shelf","BooksAPI","Link","Home","currentlyReading","props","books","filter","shelf","wantToRead","read","moveBook"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AACI;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;AAnBJ,6BA0Ca;AAEL,UAAMC,gBAAgB,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB,UAAAD,KAAK;AAAA,eAAIA,KAAK,CAACE,KAAN,KAAgB,kBAApB;AAAA,OAA7B,CAAzB;AACA,UAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB,UAAAD,KAAK;AAAA,eAAIA,KAAK,CAACE,KAAN,KAAgB,YAApB;AAAA,OAA7B,CAAnB;AACA,UAAME,IAAI,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB,UAAAD,KAAK;AAAA,eAAIA,KAAK,CAACE,KAAN,KAAgB,MAApB;AAAA,OAA7B,CAAb;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,mBAAb;AAAiC,QAAA,IAAI,EAAEJ,gBAAvC;AAAyD,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWM,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,cAAb;AAA4B,QAAA,IAAI,EAAEF,UAAlC;AAA8C,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWM,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,IAAI,EAAED,IAA1B;AAAgC,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAJJ,EAUI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAVJ,CADJ,CADJ;AAkBH;AAjEL;;AAAA;AAAA,EAA0BZ,SAA1B;AAoEA,eAAeI,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport Shelf from '../components/Shelf'\nimport * as BooksAPI from '../BooksAPI'\nimport { Link } from 'react-router-dom'\nexport class Home extends Component {\n    /*   state = {\n          books: []\n      };\n  \n      componentDidMount() {\n  \n          BooksAPI.getAll()\n              .then(\n                  (books) => {\n                      this.setState(() => ({\n                          books\n                      }))\n                  }\n              )\n  \n  \n      }\n   */\n    /*   moveBook = (book, newShelf, allShelf) => {\n         //console.log(newShelf);\n                const newBooks = this.state.books.map(filterdBooks => {\n                     const foundID = allShelf[newShelf].find(\n                         bookID => bookID === filterdBooks.id\n                     )\n                     if (foundID) {\n                         filterdBooks.shelf = newShelf;\n                     }\n                     return filterdBooks\n                 }) \n         BooksAPI.getAll({ id: book.id }, newShelf)\n             .then(\n                 (books) => {\n                     this.setState(() => ({\n                         books\n                     }))\n                 }\n             )\n         console.log(book, newShelf, allShelf)\n         console.log(this.state)\n     }*/\n\n    render() {\n\n        const currentlyReading = this.props.books.filter(books => books.shelf === 'currentlyReading')\n        const wantToRead = this.props.books.filter(books => books.shelf === 'wantToRead')\n        const read = this.props.books.filter(books => books.shelf === 'read')\n        return (\n            <div>\n                <div className=\"list-books\">\n                    <div className=\"list-books-title\">\n                        <h1>MyReads</h1>\n                    </div>\n                    <div className=\"list-books-content\">\n                        <Shelf title=\"Currently Reading\" book={currentlyReading} moveBook={this.props.moveBook} />\n                        <Shelf title=\"Want to read\" book={wantToRead} moveBook={this.props.moveBook} />\n                        <Shelf title=\"Read\" book={read} moveBook={this.props.moveBook} />\n                    </div>\n\n                    <div className=\"open-search\">\n                        <Link to='/search'>Add a book</Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}