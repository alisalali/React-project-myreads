{"ast":null,"code":"import _classCallCheck from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/Views/Home.js\";\nimport React, { Component } from 'react';\nimport Shelf from '../components/Shelf';\nimport * as BooksAPI from '../BooksAPI';\nexport var Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.moveBook = function (book, newShelf, allShelf) {\n      //console.log(newShelf);\n\n      /*         const newBooks = this.state.books.map(filterdBooks => {\n                  const foundID = allShelf[newShelf].find(\n                      bookID => bookID === filterdBooks.id\n                  )\n                  if (foundID) {\n                      filterdBooks.shelf = newShelf;\n                  }\n                  return filterdBooks\n              }) */\n      BooksAPI.update(book, ne).then(function (books) {\n        _this.setState(function () {\n          return {\n            books: books\n          };\n        });\n      });\n      console.log(book, newShelf, allShelf);\n      console.log(_this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var currentlyReading = this.state.books.filter(function (books) {\n        return books.shelf === 'currentlyReading';\n      });\n      var wantToRead = this.state.books.filter(function (books) {\n        return books.shelf === 'wantToRead';\n      });\n      var read = this.state.books.filter(function (books) {\n        return books.shelf === 'read';\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Shelf, {\n        title: \"Currently Reading\",\n        book: currentlyReading,\n        moveBook: this.moveBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Shelf, {\n        title: \"Want to read\",\n        book: wantToRead,\n        moveBook: this.moveBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Shelf, {\n        title: \"Read\",\n        book: read,\n        moveBook: this.moveBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return Home;\n}(Component);\nexport default Home;","map":{"version":3,"sources":["/Users/Ali/Udacity/ReactJS/Project/reactnd-project-myreads-starter-master/src/Views/Home.js"],"names":["React","Component","Shelf","BooksAPI","Home","state","books","moveBook","book","newShelf","allShelf","update","ne","then","setState","console","log","getAll","currentlyReading","filter","shelf","wantToRead","read","showSearchPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Shelf from '../components/Shelf'\nimport * as BooksAPI from '../BooksAPI'\nexport class Home extends Component {\n    state = {\n        books: []\n    };\n\n    componentDidMount() {\n\n        BooksAPI.getAll()\n            .then(\n                (books) => {\n                    this.setState(() => ({\n                        books\n                    }))\n                }\n            )\n\n\n    }\n\n    moveBook = (book, newShelf, allShelf) => {\n        //console.log(newShelf);\n        /*         const newBooks = this.state.books.map(filterdBooks => {\n                    const foundID = allShelf[newShelf].find(\n                        bookID => bookID === filterdBooks.id\n                    )\n                    if (foundID) {\n                        filterdBooks.shelf = newShelf;\n                    }\n                    return filterdBooks\n                }) */\n        BooksAPI.update(book,ne)\n            .then(\n                (books) => {\n                    this.setState(() => ({\n                        books\n                    }))\n                }\n            )\n        console.log(book, newShelf, allShelf)\n        console.log(this.state)\n    }\n\n    render() {\n\n        const currentlyReading = this.state.books.filter(books => books.shelf === 'currentlyReading')\n        const wantToRead = this.state.books.filter(books => books.shelf === 'wantToRead')\n        const read = this.state.books.filter(books => books.shelf === 'read')\n        return (\n            <div>\n                <div className=\"list-books\">\n                    <div className=\"list-books-title\">\n                        <h1>MyReads</h1>\n                    </div>\n                    <div className=\"list-books-content\">\n                        <Shelf title=\"Currently Reading\" book={currentlyReading} moveBook={this.moveBook} />\n                        <Shelf title=\"Want to read\" book={wantToRead} moveBook={this.moveBook} />\n                        <Shelf title=\"Read\" book={read} moveBook={this.moveBook} />\n                    </div>\n                    <div className=\"open-search\">\n                        <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}